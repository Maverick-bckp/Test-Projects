@model IEnumerable<MVCAppTest.Models.RakeAllocationLog>

<script type="text/javascript" src="https://code.highcharts.com/highcharts.js"></script>
@*<script type="text/javascript" src="https://code.highcharts.com/highcharts.src.js"></script>*@
<script type="text/javascript" src="https://code.highcharts.com/highcharts-3d.js"></script>
<script type="text/javascript" src="https://code.highcharts.com/modules/exporting.js"></script>
<script type="text/javascript" src="https://code.highcharts.com/modules/export-data.js"></script>
<script type="text/javascript" src="https://code.highcharts.com/modules/accessibility.js"></script>
<style>
    #container_graph {
        height: 400px;
    }

    .highcharts-figure, .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    #sliders td input[type=range] {
        display: inline;
    }

    #sliders td {
        padding-right: 1em;
        white-space: nowrap;
    }
</style>

@*<p>
        @Html.ActionLink("Rake Allocation Log", "getAllRakeAllocationLog")
    </p>*@
@*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Unit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TakeOverNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CCNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LineNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Destination)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TakeOverNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CCNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LineNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Destination)
                </td>
                <td>
                    @Html.ActionLink("Edit", "editRakeAllocationLog", new { linenum = item.LineNum, takeovernum = item.TakeOverNum }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }

    </table>*@



<script>
    // Set up the chart
    const chart = new Highcharts.Chart('container_graph',{
        chart: {
            type: 'column',
            options3d: {
                enabled: true,
                alpha: 15,
                beta: 15,
                depth: 50,
                viewDistance: 25
            }
        },
        title: {
            text: 'Chart rotation demo'
        },
        subtitle: {
            text: 'Test options by dragging the sliders below'
        },
        plotOptions: {
            column: {
                depth: 25
            }
        },
        series: [{
            data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]
        }]
    });

    function showValues() {
        document.getElementById('alpha-value').innerHTML = chart.options.chart.options3d.alpha;
        document.getElementById('beta-value').innerHTML = chart.options.chart.options3d.beta;
        document.getElementById('depth-value').innerHTML = chart.options.chart.options3d.depth;
    }

    // Activate the sliders
    document.querySelectorAll('#sliders input').forEach(input => input.addEventListener('input', e => {
        chart.options.chart.options3d[e.target.id] = parseFloat(e.target.value);
        showValues();
        chart.redraw(false);
    }));

    showValues();
</script>
<div>
    <div class="highcharts-figure">
        <div id="container_graph"></div>
        <p class="highcharts-description">
            Chart designed to highlight 3D column chart rendering options.
            Move the sliders below to change the basic 3D settings for the chart.
            3D column charts are generally harder to read than 2D charts, but provide
            an interesting visual effect.
        </p>
        <div id="sliders">
            <table>
                <tbody>
                    <tr>
                        <td><label for="alpha">Alpha Angle</label></td>
                        <td><input id="alpha" type="range" min="0" max="45" value="15"> <span id="alpha-value" class="value"></span></td>
                    </tr>
                    <tr>
                        <td><label for="beta">Beta Angle</label></td>
                        <td><input id="beta" type="range" min="-45" max="45" value="15"> <span id="beta-value" class="value"></span></td>
                    </tr>
                    <tr>
                        <td><label for="depth">Depth</label></td>
                        <td><input id="depth" type="range" min="20" max="100" value="50"> <span id="depth-value" class="value"></span></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
